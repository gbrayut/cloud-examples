apiVersion: v1
kind: Namespace
metadata:
  name: echoserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver
  namespace: echoserver
spec:
  selector:
    matchLabels:
      app: echoserver
  replicas: 2
  #minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      annotations:
        bump: "98765432101"
      labels:
        app: echoserver
    spec:
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoSchedule
        key: example.com/dedicated
        value: ingress
        operator: Equal
      #- key: node.kubernetes.io/not-ready
      #  operator: Exists
      nodeSelector:
        cloud.google.com/gke-nodepool: "ingress-pool"
      containers:
      - image: gcr.io/kubernetes-e2e-test-images/echoserver:2.1
        imagePullPolicy: Always
        name: echoserver
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          periodSeconds: 1
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          periodSeconds: 1
        resources:
          requests:
            cpu: "1300m"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
---
#apiVersion: policy/v1
#kind: PodDisruptionBudget
#metadata:
#  name: echoserver
#  namespace: echoserver
#spec:
#  maxUnavailable: 1
#  selector:
#    matchLabels:
#      app: echoserver
#---
apiVersion: v1
kind: Service
metadata:
  name: echoserver
  namespace: echoserver
  annotations:
    networking.gke.io/load-balancer-type: "Internal"
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: echoserver
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: echoserverext
#  namespace: echoserver
#spec:
#  externalTrafficPolicy: Local
#  type: LoadBalancer
#  ports:
#  - port: 80
#    targetPort: 8080
#    protocol: TCP
#    name: http
#  selector:
#    app: echoserver