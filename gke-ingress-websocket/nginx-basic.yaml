apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: echo
  annotations:
    cloud.google.com/backend-config: '{"default": "nginx-basic-backendconfig"}' # https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-configuration#associating_backendconfig_with_your_ingress
spec:
  type: LoadBalancer    # Create an external NLB so it is easier to test. Could also change this to just ClusterIP
  ports:
    - port: 80
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: echo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
      annotations:
        # Prevent nginx from pre-resolving addresses https://github.com/istio/istio/issues/14450#issuecomment-498771781
        #nginx.ingress.kubernetes.io/service-upstream: "true"
        # This may only work if using nginx ingress controller. See "proxy_ssl_server_name on" settings below
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-conf
              subPath: nginx.conf
      volumes:
      - configMap:
          name: nginx-config
        name: nginx-conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: echo
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }
    http {
      server {

        listen 80;       
        location /test {
          #index index.html;
          #root /usr/share/nginx/html/;
          default_type text/html;
          return 200 "<!DOCTYPE html>testing\n";
        }

        location / {
          proxy_pass http://echo9090:9090;
          #proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
        }
      }
    }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-basic
  namespace: echo
spec:
  defaultBackend:
    service:
      name: nginx
      port:
        number: 80
---
# Increase backend timeout from 30s default
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: nginx-basic-backendconfig
  namespace: echo
spec:
  # https://cloud.google.com/kubernetes-engine/docs/concepts/ingress-xlb#support_for_websocket
  timeoutSec: 600
