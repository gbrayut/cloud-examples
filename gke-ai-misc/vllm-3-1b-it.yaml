# https://cloud.google.com/kubernetes-engine/docs/tutorials/serve-gemma-gpu-vllm#gemma-3-1b-it
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-gemma-3-1b
spec:
  replicas: 1   # start with 1 replica then scale after confirming it works
  selector:
    matchLabels:
      app: vllm-gemma-3-1b
  strategy:
    type: Recreate  # Use this for faster updates when troubleshooting (but not in production)
  template:
    metadata:
      labels:
        app: vllm-gemma-3-1b
        ai.gke.io/model: gemma-3-1b-it
        ai.gke.io/inference-server: vllm
        examples.ai.gke.io/source: user-guide
    spec:
      terminationGracePeriodSeconds: 15  # again faster troubleshooting but production should have better drain time
      containers:
      - name: inference-server
        image: docker.io/vllm/vllm-openai:v0.10.1.1
        resources:
          requests:  # These requests times 7 (or desired replica count) must fit on a node if you want to use all 7 GPU
            cpu: "1.5"                  # 12 cpu per node
            memory: "10Gi"              # ~80GB per node
            ephemeral-storage: "6Gi"    # ~45GB per node
            nvidia.com/gpu: "1"
          limits:
            cpu: "2"
            memory: "10Gi"
            ephemeral-storage: "6Gi"
            nvidia.com/gpu: "1"
        command: ["python3", "-m", "vllm.entrypoints.openai.api_server"]
        args:
        - --model=$(MODEL_ID)
        - --tensor-parallel-size=1
        - --gpu-memory-utilization=0.86   # reduce if ERROR [core.py:700] RuntimeError: NVML_SUCCESS == r INTERNAL ASSERT FAILED at "/pytorch/c10/cuda/CUDACachingAllocator.cpp":1016, please report a bug to PyTorch.
        - --host=0.0.0.0
        - --port=8000
        env:
        #- name: VLLM_LOGGING_LEVEL
        #  value: DEBUG  # for troubleshooting RuntimeError: Failed to infer device type
        - name: LD_LIBRARY_PATH
          value: ${LD_LIBRARY_PATH}:/usr/local/nvidia/lib64
        - name: MODEL_ID
          value: google/gemma-3-1b-it
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-secret
              key: hf_api_token
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        lifecycle:
          preStop:
            sleep:
              seconds: 15   # Helps drain connections
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 5
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 1
          timeoutSeconds: 1
        startupProbe:
          failureThreshold: 3600
          initialDelaySeconds: 2
          periodSeconds: 1
          httpGet:
            path: /health
            port: http
            scheme: HTTP
      volumes:
      - name: dshm
        emptyDir:
            medium: Memory
      nodeSelector:
        cloud.google.com/gke-gpu-partition-size: 1g.5gb
        cloud.google.com/gke-accelerator: nvidia-tesla-a100
        #cloud.google.com/gke-accelerator-count: "1"  # only required for Autopilot/NAP
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-gemma-3-1b
spec:
  selector:
    app: vllm-gemma-3-1b
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
